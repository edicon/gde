1
00:00:01,410 --> 00:00:04,960

[Music]

2
00:00:04,970 --> 00:00:07,830
thank you very much Joe it's working can

3
00:00:07,830 --> 00:00:08,250
you hear me

4
00:00:08,250 --> 00:00:10,679
perfect great okay so first of all thank

5
00:00:10,679 --> 00:00:12,540
you for choosing this session over the

6
00:00:12,540 --> 00:00:14,429
other it's a pleasure having you here

7
00:00:14,429 --> 00:00:16,890
today I'm very excited to be on the

8
00:00:16,890 --> 00:00:18,960
stage today because it's the first time

9
00:00:18,960 --> 00:00:21,810
I'm delivering this talk and to be

10
00:00:21,810 --> 00:00:23,220
honest it's also very challenging

11
00:00:23,220 --> 00:00:25,350
because I'm trying to summarize in two

12
00:00:25,350 --> 00:00:28,439
years of work in 30 minutes that is

13
00:00:28,439 --> 00:00:30,869
really really interesting so today I

14
00:00:30,869 --> 00:00:33,780
want to introduce you on my vision of a

15
00:00:33,780 --> 00:00:36,090
micro from x architecture it's not a new

16
00:00:36,090 --> 00:00:39,540
topic but there are many approaches that

17
00:00:39,540 --> 00:00:40,950
we can have I would like to give you

18
00:00:40,950 --> 00:00:44,250
mine as joe said my name is Luca I'm

19
00:00:44,250 --> 00:00:46,170
chief architect at the zone the zone a

20
00:00:46,170 --> 00:00:48,629
is an OTT platform it's available in

21
00:00:48,629 --> 00:00:51,480
seven countries we are already we

22
00:00:51,480 --> 00:00:53,219
already have hundreds of developers we

23
00:00:53,219 --> 00:00:55,710
have millions of customers is a really

24
00:00:55,710 --> 00:00:59,129
interesting challenge because we have 30

25
00:00:59,129 --> 00:01:01,649
devices that we have to keep on track

26
00:01:01,649 --> 00:01:04,140
and deliver our applications we have a

27
00:01:04,140 --> 00:01:06,659
delivery video delivery pipeline is very

28
00:01:06,659 --> 00:01:08,220
complex that's basically the Netflix

29
00:01:08,220 --> 00:01:10,320
source port I'm a Google developer

30
00:01:10,320 --> 00:01:12,090
expert on web technologies and I'm

31
00:01:12,090 --> 00:01:14,460
organizing in London a lot of meetups

32
00:01:14,460 --> 00:01:16,350
with my community so if you are in

33
00:01:16,350 --> 00:01:17,520
London and you're looking for a meet-up

34
00:01:17,520 --> 00:01:19,890
but usually we organize one per per

35
00:01:19,890 --> 00:01:22,770
month so feel free to join us so what we

36
00:01:22,770 --> 00:01:25,530
are going to cover today so first of all

37
00:01:25,530 --> 00:01:28,020
we will do a journey from a monolith to

38
00:01:28,020 --> 00:01:31,920
micro anything and then we were talking

39
00:01:31,920 --> 00:01:34,680
about what is a microphone 10 we will

40
00:01:34,680 --> 00:01:37,110
define some principles around them and

41
00:01:37,110 --> 00:01:39,229
we will end oh and we will end up with

42
00:01:39,229 --> 00:01:42,060
some technical implementation or let's

43
00:01:42,060 --> 00:01:43,770
say different option that we can have in

44
00:01:43,770 --> 00:01:45,530
order to embrace this new architecture

45
00:01:45,530 --> 00:01:49,079
first of all and foremost obviously this

46
00:01:49,079 --> 00:01:51,479
one is as I said the first time that I

47
00:01:51,479 --> 00:01:53,939
do this talk but in order to arrive to

48
00:01:53,939 --> 00:01:58,049
these ideas and and concept I had to be

49
00:01:58,049 --> 00:02:00,180
very open mind and questioning all the

50
00:02:00,180 --> 00:02:03,420
best software developer practices that I

51
00:02:03,420 --> 00:02:06,689
studied in the past so please be

52
00:02:06,689 --> 00:02:08,369
open-minded during this talk and think

53
00:02:08,369 --> 00:02:11,129
at scale because this is one of the way

54
00:02:11,129 --> 00:02:13,709
that you will embrace better

55
00:02:13,709 --> 00:02:16,980
the DS architecture okay so I joined the

56
00:02:16,980 --> 00:02:19,110
zone four years ago we started we are

57
00:02:19,110 --> 00:02:21,239
still a startup in a certain way despite

58
00:02:21,239 --> 00:02:23,489
the number of people that are working on

59
00:02:23,489 --> 00:02:26,430
the zone and I remember the one of by

60
00:02:26,430 --> 00:02:29,010
the first day that was there and the CPU

61
00:02:29,010 --> 00:02:31,079
came to my desk said listen look up I

62
00:02:31,079 --> 00:02:33,150
know that you are the second tech person

63
00:02:33,150 --> 00:02:35,430
that was hired inside this company but

64
00:02:35,430 --> 00:02:37,140
at the same time I would like that you

65
00:02:37,140 --> 00:02:39,450
think broadly and you start to think at

66
00:02:39,450 --> 00:02:41,549
scale because what we would like to have

67
00:02:41,549 --> 00:02:43,859
in the zone is having undress of

68
00:02:43,859 --> 00:02:45,420
developers that are working on the same

69
00:02:45,420 --> 00:02:48,569
platform and the same codebase and to be

70
00:02:48,569 --> 00:02:50,190
honest in a certain way as an architect

71
00:02:50,190 --> 00:02:51,870
I was a bit scared because if you think

72
00:02:51,870 --> 00:02:53,940
about that you know you are the second

73
00:02:53,940 --> 00:02:55,170
that joined the company as a tech person

74
00:02:55,170 --> 00:02:57,510
and suddenly you discover that you

75
00:02:57,510 --> 00:02:59,670
already have to this huge challenge to

76
00:02:59,670 --> 00:03:02,120
think about an architecture that could

77
00:03:02,120 --> 00:03:05,129
empower developers both distributed

78
00:03:05,129 --> 00:03:06,930
teams across the world working on the

79
00:03:06,930 --> 00:03:09,139
same code base so it is a big challenge

80
00:03:09,139 --> 00:03:12,150
so beard that in mind let's start to

81
00:03:12,150 --> 00:03:13,859
this journey that was basically the

82
00:03:13,859 --> 00:03:16,950
journey that I did in order to move

83
00:03:16,950 --> 00:03:20,340
forward towards the micro world as I

84
00:03:20,340 --> 00:03:22,769
call it so when we start the usually

85
00:03:22,769 --> 00:03:25,410
when you start a new project or if you

86
00:03:25,410 --> 00:03:28,230
work in a startup usually what what you

87
00:03:28,230 --> 00:03:30,079
really care about at the beginning is

88
00:03:30,079 --> 00:03:32,519
retrieving quickly a feedback from from

89
00:03:32,519 --> 00:03:34,949
your potential customers right so the

90
00:03:34,949 --> 00:03:37,379
tech stock is important but not

91
00:03:37,379 --> 00:03:40,139
essential what we usually what you do is

92
00:03:40,139 --> 00:03:41,909
you tend to obviously the time to market

93
00:03:41,909 --> 00:03:43,319
is more important therefore you - you

94
00:03:43,319 --> 00:03:45,180
tend to maybe cut some corners but

95
00:03:45,180 --> 00:03:47,760
usually 90% of the time what you hand up

96
00:03:47,760 --> 00:03:50,340
having is I say a database that is

97
00:03:50,340 --> 00:03:52,379
shared across multiple api's you have an

98
00:03:52,379 --> 00:03:55,290
NPI layer that is storing what they call

99
00:03:55,290 --> 00:03:57,930
a monolith that basically contains all

100
00:03:57,930 --> 00:03:59,340
your API is integration with third-party

101
00:03:59,340 --> 00:04:01,500
companies and so on and then on the

102
00:04:01,500 --> 00:04:03,150
client side you have a single page

103
00:04:03,150 --> 00:04:05,519
application single page application a

104
00:04:05,519 --> 00:04:07,879
peak that that architecture just because

105
00:04:07,879 --> 00:04:10,319
obviously there are several several

106
00:04:10,319 --> 00:04:11,609
others that you can pick it could be

107
00:04:11,609 --> 00:04:13,799
server-side rendered you can have single

108
00:04:13,799 --> 00:04:16,169
pages but single page application is one

109
00:04:16,169 --> 00:04:17,760
of the most used where you download that

110
00:04:17,760 --> 00:04:19,769
the entire code base and basically then

111
00:04:19,769 --> 00:04:21,719
you just consume sub you API is in order

112
00:04:21,719 --> 00:04:25,060
to view the rendering rendering the view

113
00:04:25,060 --> 00:04:28,000
and and then when when you validate your

114
00:04:28,000 --> 00:04:30,040
ideas and the company starts to grow you

115
00:04:30,040 --> 00:04:32,530
identify what are the areas that has to

116
00:04:32,530 --> 00:04:34,000
grow with the company and the

117
00:04:34,000 --> 00:04:36,510
organization so what you start to do is

118
00:04:36,510 --> 00:04:39,460
taking your monolith breaking it up in

119
00:04:39,460 --> 00:04:41,950
multiple micro-services you start to

120
00:04:41,950 --> 00:04:43,540
have one database for microservices

121
00:04:43,540 --> 00:04:44,800
because otherwise it's an anti-pattern

122
00:04:44,800 --> 00:04:47,380
using a shared database for a multiple

123
00:04:47,380 --> 00:04:49,540
micro service you have your

124
00:04:49,540 --> 00:04:51,370
infrastructure that is dedicated for

125
00:04:51,370 --> 00:04:52,870
that and then you start to divide your

126
00:04:52,870 --> 00:04:55,480
teams following and they say the way how

127
00:04:55,480 --> 00:04:57,730
the business works but what what do you

128
00:04:57,730 --> 00:04:59,500
do on the client side on the client

129
00:04:59,500 --> 00:05:01,990
usually what you have is a I don't know

130
00:05:01,990 --> 00:05:03,430
tens of developers that are working on

131
00:05:03,430 --> 00:05:05,440
the same codebase how they started and

132
00:05:05,440 --> 00:05:07,570
it's becoming more difficult every time

133
00:05:07,570 --> 00:05:09,490
every iteration because if they're not

134
00:05:09,490 --> 00:05:11,560
very prescriptive in the way that they

135
00:05:11,560 --> 00:05:14,560
are working you need to have let's say a

136
00:05:14,560 --> 00:05:16,960
code base that is exploding and it's way

137
00:05:16,960 --> 00:05:18,130
more difficult if you start to have

138
00:05:18,130 --> 00:05:20,050
distributed teams because we distributed

139
00:05:20,050 --> 00:05:22,000
teams is very very hard part from Puglia

140
00:05:22,000 --> 00:05:23,800
having two requests that you can check

141
00:05:23,800 --> 00:05:25,300
what is the outcome of you of your

142
00:05:25,300 --> 00:05:25,900
codebase

143
00:05:25,900 --> 00:05:28,090
so the import with your team so usually

144
00:05:28,090 --> 00:05:30,880
on the front hand side we as we said we

145
00:05:30,880 --> 00:05:32,229
have a unique code base that is managed

146
00:05:32,229 --> 00:05:34,750
by multiple teams what we need to manage

147
00:05:34,750 --> 00:05:36,370
a lot is the communication overhead

148
00:05:36,370 --> 00:05:38,380
between different parts of the

149
00:05:38,380 --> 00:05:39,760
organization and particularly if you

150
00:05:39,760 --> 00:05:41,229
have if you have a distributed team on

151
00:05:41,229 --> 00:05:43,419
instead if you check what is happening

152
00:05:43,419 --> 00:05:44,740
on the infrastructure side so the

153
00:05:44,740 --> 00:05:48,729
website and and back inside they start

154
00:05:48,729 --> 00:05:50,470
to have a structure that allowed them to

155
00:05:50,470 --> 00:05:52,900
scale independently some part do I have

156
00:05:52,900 --> 00:05:54,400
they have some strong boundaries around

157
00:05:54,400 --> 00:05:56,410
what they are delivering and everything

158
00:05:56,410 --> 00:05:58,780
became easier in a certain way because

159
00:05:58,780 --> 00:06:00,220
if they design properly they're

160
00:06:00,220 --> 00:06:03,669
microservice in the api's they just

161
00:06:03,669 --> 00:06:05,500
define a contract and they stick with

162
00:06:05,500 --> 00:06:07,360
that and then they are completely

163
00:06:07,360 --> 00:06:09,340
autonomous to deliver a new micro

164
00:06:09,340 --> 00:06:11,530
service a new version they can there are

165
00:06:11,530 --> 00:06:13,570
some a lot of engineering engineering

166
00:06:13,570 --> 00:06:15,550
practices that you can use in order to

167
00:06:15,550 --> 00:06:17,080
ensure that your micro service is not

168
00:06:17,080 --> 00:06:19,479
breaking up the entire platform also in

169
00:06:19,479 --> 00:06:22,479
production so a lot of these things but

170
00:06:22,479 --> 00:06:25,270
on the client side it wasn't exactly the

171
00:06:25,270 --> 00:06:28,330
same things right so as we said this is

172
00:06:28,330 --> 00:06:31,180
our situation and I would like to - that

173
00:06:31,180 --> 00:06:32,650
you stick that in mind because this is

174
00:06:32,650 --> 00:06:34,870
how often these kind of things are

175
00:06:34,870 --> 00:06:35,940
working

176
00:06:35,940 --> 00:06:39,330
but what if we change this thing what if

177
00:06:39,330 --> 00:06:41,610
we start to take the principles of

178
00:06:41,610 --> 00:06:43,740
microservices and apply to the client

179
00:06:43,740 --> 00:06:47,370
side what if we start to say okay so

180
00:06:47,370 --> 00:06:50,670
domain driven design is not only for for

181
00:06:50,670 --> 00:06:52,980
the back end it could be applied those

182
00:06:52,980 --> 00:06:54,960
on the front end at the end of the day

183
00:06:54,960 --> 00:06:56,370
if you think about that we have a

184
00:06:56,370 --> 00:06:58,380
monolid we break it apart and we start

185
00:06:58,380 --> 00:07:01,020
to have multiple api's that are managed

186
00:07:01,020 --> 00:07:03,300
by multiple containers or I don't know

187
00:07:03,300 --> 00:07:05,760
lambdas or whatever you prefer to deal

188
00:07:05,760 --> 00:07:08,340
with and then you start to have let's

189
00:07:08,340 --> 00:07:10,710
say an infrastructure that is dedicated

190
00:07:10,710 --> 00:07:12,750
for certain micro service and you can

191
00:07:12,750 --> 00:07:14,760
have votes on the front end you can

192
00:07:14,760 --> 00:07:18,120
break apart the SP a monolith I have

193
00:07:18,120 --> 00:07:19,560
English saved some challenges obviously

194
00:07:19,560 --> 00:07:21,270
because obviously you need to find a way

195
00:07:21,270 --> 00:07:23,520
to work it straight which client which a

196
00:07:23,520 --> 00:07:24,960
microbe microphone tank you won't load

197
00:07:24,960 --> 00:07:26,490
but at the end of the day you can do

198
00:07:26,490 --> 00:07:28,050
that and you can end up on something

199
00:07:28,050 --> 00:07:29,220
under an architecture like that

200
00:07:29,220 --> 00:07:31,170
obviously is a simplification but why

201
00:07:31,170 --> 00:07:34,830
not so if we if we let's say start to

202
00:07:34,830 --> 00:07:37,170
begin a little bit further with that we

203
00:07:37,170 --> 00:07:39,120
can start to see something very

204
00:07:39,120 --> 00:07:41,340
interesting so first of all the impact

205
00:07:41,340 --> 00:07:44,040
to the team because we don't think often

206
00:07:44,040 --> 00:07:46,560
as architects or too much on the process

207
00:07:46,560 --> 00:07:48,120
of how we structure the team but we have

208
00:07:48,120 --> 00:07:50,190
to do that because if we want to scale

209
00:07:50,190 --> 00:07:52,230
your company that is probably one of the

210
00:07:52,230 --> 00:07:53,550
most important thing in particular for

211
00:07:53,550 --> 00:07:55,740
the front-end front-end if you scale the

212
00:07:55,740 --> 00:07:57,150
front and you don't have to scale

213
00:07:57,150 --> 00:07:59,160
infrastructure because we are delivering

214
00:07:59,160 --> 00:08:01,290
vast majority of the time static files

215
00:08:01,290 --> 00:08:03,930
so CD s are doing that for us what we

216
00:08:03,930 --> 00:08:07,860
need to scale and think about that is it

217
00:08:07,860 --> 00:08:09,930
are the teams because that is the

218
00:08:09,930 --> 00:08:11,940
complicated part but it with micro front

219
00:08:11,940 --> 00:08:14,160
ends we can start to introduce a way to

220
00:08:14,160 --> 00:08:16,169
speed up the throughput of our teams

221
00:08:16,169 --> 00:08:18,000
because we can have cross-functional

222
00:08:18,000 --> 00:08:20,130
teams that are managing the Microsoft

223
00:08:20,130 --> 00:08:22,320
API layer the infrastructure layer and

224
00:08:22,320 --> 00:08:24,840
the front-end layer in our in autonomy

225
00:08:24,840 --> 00:08:27,030
they don't have to let's say communicate

226
00:08:27,030 --> 00:08:28,470
with other teams as long the contracts

227
00:08:28,470 --> 00:08:30,390
are respected they start to have freedom

228
00:08:30,390 --> 00:08:31,980
responsibility because they own the

229
00:08:31,980 --> 00:08:33,630
force at hand - and for the first time

230
00:08:33,630 --> 00:08:36,630
they they can innovate as we know one of

231
00:08:36,630 --> 00:08:39,090
the best one of the pleasure working

232
00:08:39,090 --> 00:08:40,770
with micro services is the fact that you

233
00:08:40,770 --> 00:08:42,990
can have multiple technology stock on

234
00:08:42,990 --> 00:08:45,030
when you are designing your Europe eyes

235
00:08:45,030 --> 00:08:46,860
we can do the same on micro front ends

236
00:08:46,860 --> 00:08:49,380
why you can have you cannot have like

237
00:08:49,380 --> 00:08:50,850
the no part of your application written

238
00:08:50,850 --> 00:08:52,620
in beauty yes in part with react and

239
00:08:52,620 --> 00:08:55,260
redux and part with angular it's totally

240
00:08:55,260 --> 00:08:59,130
feasible so let's talk about what is a

241
00:08:59,130 --> 00:09:01,740
micro friend from front end now so this

242
00:09:01,740 --> 00:09:03,330
is my definition obviously you cannot

243
00:09:03,330 --> 00:09:06,840
find much on on the web so I'm working

244
00:09:06,840 --> 00:09:08,820
hard in order to provide some

245
00:09:08,820 --> 00:09:10,590
information so starting from a DD

246
00:09:10,590 --> 00:09:12,360
perspective micro front ends are a

247
00:09:12,360 --> 00:09:14,160
technical representation of a business

248
00:09:14,160 --> 00:09:17,340
domain subdomain and they provide strong

249
00:09:17,340 --> 00:09:19,620
boundaries with clear contracts and they

250
00:09:19,620 --> 00:09:21,330
avoid sharing logic with other

251
00:09:21,330 --> 00:09:24,540
subdomains that for me is a let's say

252
00:09:24,540 --> 00:09:26,910
and a definition that is providing

253
00:09:26,910 --> 00:09:29,040
clarity on what we are trying to achieve

254
00:09:29,040 --> 00:09:32,340
with microphone tents and I would like

255
00:09:32,340 --> 00:09:35,160
to check the key part of this sentence

256
00:09:35,160 --> 00:09:37,010
so representation of business subdomain

257
00:09:37,010 --> 00:09:38,940
with strong boundaries and clear

258
00:09:38,940 --> 00:09:41,820
contracts and avoid sharing logic so

259
00:09:41,820 --> 00:09:43,860
domain a subdomain is not a new concept

260
00:09:43,860 --> 00:09:46,320
is something that is applied in domain

261
00:09:46,320 --> 00:09:49,620
driven design for a while and often

262
00:09:49,620 --> 00:09:51,870
domain driven design is is thought

263
00:09:51,870 --> 00:09:54,270
mainly for for back-end layers but we

264
00:09:54,270 --> 00:09:55,680
should do users on the front end so

265
00:09:55,680 --> 00:09:57,360
let's see what what is a domain a domain

266
00:09:57,360 --> 00:09:59,580
is the problem to be addressed with the

267
00:09:59,580 --> 00:10:01,050
software effort so if you think about

268
00:10:01,050 --> 00:10:03,300
Netflix I hope that everyone knows what

269
00:10:03,300 --> 00:10:06,870
Netflix is the domain for them is an OTT

270
00:10:06,870 --> 00:10:08,750
platform that is trying to deliver

271
00:10:08,750 --> 00:10:13,260
movies with streaming okay but obviously

272
00:10:13,260 --> 00:10:15,000
if you we take all this domain or

273
00:10:15,000 --> 00:10:17,160
together is very complex because there

274
00:10:17,160 --> 00:10:18,660
are a lot of things inside there that we

275
00:10:18,660 --> 00:10:20,250
have to think about subscription came

276
00:10:20,250 --> 00:10:23,850
and catalog and so on and therefore we

277
00:10:23,850 --> 00:10:26,760
did it is tending to say okay so if we

278
00:10:26,760 --> 00:10:28,290
have a domain you can split it up in

279
00:10:28,290 --> 00:10:30,690
multiple subdomains and usually if you

280
00:10:30,690 --> 00:10:32,940
do that very well and you master the

281
00:10:32,940 --> 00:10:35,940
domain you can start to map your

282
00:10:35,940 --> 00:10:39,690
subdomains also with teams and that is

283
00:10:39,690 --> 00:10:42,330
very important because obviously you can

284
00:10:42,330 --> 00:10:43,740
start to have light another payment team

285
00:10:43,740 --> 00:10:45,480
and you have like the infrastructure

286
00:10:45,480 --> 00:10:47,580
team and your front and the back end

287
00:10:47,580 --> 00:10:48,900
team and the cross-functional team

288
00:10:48,900 --> 00:10:50,700
working together with the product and

289
00:10:50,700 --> 00:10:52,530
that is something very very important

290
00:10:52,530 --> 00:10:54,030
because when you have that it means that

291
00:10:54,030 --> 00:10:55,820
the communication where I'd start to

292
00:10:55,820 --> 00:11:01,530
diminish a lot another key concept of

293
00:11:01,530 --> 00:11:03,209
micro front ends for me is

294
00:11:03,209 --> 00:11:06,179
share nothing and I know that it's very

295
00:11:06,179 --> 00:11:07,920
painful at the beginning because the

296
00:11:07,920 --> 00:11:09,779
first thing that we tend to do on the

297
00:11:09,779 --> 00:11:12,449
front end is okay so I have to create my

298
00:11:12,449 --> 00:11:15,240
application there are some components

299
00:11:15,240 --> 00:11:17,670
that are available in multiple area of

300
00:11:17,670 --> 00:11:19,499
my application let's create a component

301
00:11:19,499 --> 00:11:22,079
library and trust me I spend a lot of

302
00:11:22,079 --> 00:11:25,860
time working with on this topic with

303
00:11:25,860 --> 00:11:27,720
developers and they know what are the

304
00:11:27,720 --> 00:11:29,369
pros and cons of this I know that there

305
00:11:29,369 --> 00:11:31,139
is a lot of resistance at the beginning

306
00:11:31,139 --> 00:11:34,259
but the fact that you are so if you

307
00:11:34,259 --> 00:11:35,910
think about the microservice usually

308
00:11:35,910 --> 00:11:37,410
with the macro service you you share

309
00:11:37,410 --> 00:11:39,689
really a little bit that usually are

310
00:11:39,689 --> 00:11:42,300
logs and monitoring and often are not

311
00:11:42,300 --> 00:11:45,509
even inside your code what if we can do

312
00:11:45,509 --> 00:11:46,949
the same on on the front end honestly

313
00:11:46,949 --> 00:11:48,959
what we have done so one of the things

314
00:11:48,959 --> 00:11:50,999
that usually we have in the zone a lot

315
00:11:50,999 --> 00:11:52,259
of people are saying okay we have

316
00:11:52,259 --> 00:11:55,709
multiple microphone tents and we have

317
00:11:55,709 --> 00:11:57,360
the header and footer that are

318
00:11:57,360 --> 00:11:59,189
replicated I don't know five six times

319
00:11:59,189 --> 00:12:01,470
copy and paste and then changed and a

320
00:12:01,470 --> 00:12:03,329
lot of people are saying oh yes but that

321
00:12:03,329 --> 00:12:04,679
that is a bad practice because we are

322
00:12:04,679 --> 00:12:05,939
copying code and every time we need to

323
00:12:05,939 --> 00:12:08,610
change we need to change five times but

324
00:12:08,610 --> 00:12:10,559
the question is how often the header and

325
00:12:10,559 --> 00:12:11,819
footer is changing during the lifecycle

326
00:12:11,819 --> 00:12:14,069
of a platform so I checked that that

327
00:12:14,069 --> 00:12:15,869
thing and we changed twice in three

328
00:12:15,869 --> 00:12:18,990
years so is it really a problem the fact

329
00:12:18,990 --> 00:12:22,199
that we are adding a new label inside

330
00:12:22,199 --> 00:12:25,860
the header or we are changing the color

331
00:12:25,860 --> 00:12:27,809
of the font I don't think so I think

332
00:12:27,809 --> 00:12:29,519
that the throughput is way more

333
00:12:29,519 --> 00:12:31,649
important and then thinking on okay we

334
00:12:31,649 --> 00:12:34,019
have to to deal with this duplication of

335
00:12:34,019 --> 00:12:36,660
code and if it's well address is not a

336
00:12:36,660 --> 00:12:39,600
big deal so how we can approach

337
00:12:39,600 --> 00:12:41,249
microphone tents because there are

338
00:12:41,249 --> 00:12:43,170
several ways that to do that it's not as

339
00:12:43,170 --> 00:12:45,329
I said it's not a new concept but we are

340
00:12:45,329 --> 00:12:47,339
trying to find the right way to do that

341
00:12:47,339 --> 00:12:49,559
so for instance modify in the desktop

342
00:12:49,559 --> 00:12:52,049
application they they work with iframes

343
00:12:52,049 --> 00:12:54,779
it's a massive application that is based

344
00:12:54,779 --> 00:12:56,720
on web technologies for the UI and the

345
00:12:56,720 --> 00:12:59,220
C++ behind the scene and what they are

346
00:12:59,220 --> 00:13:01,220
doing basically are creating multiple

347
00:13:01,220 --> 00:13:03,860
iframes that are their minor front ends

348
00:13:03,860 --> 00:13:06,449
and inside the view there is I don't

349
00:13:06,449 --> 00:13:07,860
know the microphone time for it for the

350
00:13:07,860 --> 00:13:09,959
music player they ever I don't know what

351
00:13:09,959 --> 00:13:12,269
your friends are listening there is the

352
00:13:12,269 --> 00:13:14,579
least catalogue microphone Tennison and

353
00:13:14,579 --> 00:13:17,279
they communicating together via an even

354
00:13:17,279 --> 00:13:20,040
that is injecting inside microphone tan

355
00:13:20,040 --> 00:13:22,860
that is one option obviously the

356
00:13:22,860 --> 00:13:26,310
question here is how we can let's say

357
00:13:26,310 --> 00:13:28,470
assemble these views in a proper way

358
00:13:28,470 --> 00:13:29,999
probably there is another team that is

359
00:13:29,999 --> 00:13:31,139
doing that probably the reserves

360
00:13:31,139 --> 00:13:32,670
responsibility of a specific team but

361
00:13:32,670 --> 00:13:35,040
still there is a lot of communication at

362
00:13:35,040 --> 00:13:37,889
this going on open table another large

363
00:13:37,889 --> 00:13:40,230
organization they have distributed teams

364
00:13:40,230 --> 00:13:44,040
in Australia London and San Francisco

365
00:13:44,040 --> 00:13:47,850
Furman well they created after so they

366
00:13:47,850 --> 00:13:49,680
started this journey of microphone tans

367
00:13:49,680 --> 00:13:54,149
in 2014 if I remember well and they they

368
00:13:54,149 --> 00:13:55,949
basically created a developer experience

369
00:13:55,949 --> 00:13:59,220
team that the delivered is open

370
00:13:59,220 --> 00:14:00,920
components as an open source project

371
00:14:00,920 --> 00:14:03,779
where basically when we define a

372
00:14:03,779 --> 00:14:06,209
component is a front-end back-end

373
00:14:06,209 --> 00:14:09,569
and style and everything server-side

374
00:14:09,569 --> 00:14:12,360
render the component that the store

375
00:14:12,360 --> 00:14:14,309
inside the registry think about doctor

376
00:14:14,309 --> 00:14:15,959
if you're familiar with that and each

377
00:14:15,959 --> 00:14:17,459
single team can pick up from this

378
00:14:17,459 --> 00:14:19,079
registry the components that they want

379
00:14:19,079 --> 00:14:22,500
and they compose the application without

380
00:14:22,500 --> 00:14:24,870
much communication at the end because if

381
00:14:24,870 --> 00:14:26,100
there is a team in Australia that is

382
00:14:26,100 --> 00:14:28,259
creating I don't know header then it

383
00:14:28,259 --> 00:14:30,149
could be used anywhere else obviously

384
00:14:30,149 --> 00:14:32,160
there is some coordination that has to

385
00:14:32,160 --> 00:14:34,589
happen on this side that cross region

386
00:14:34,589 --> 00:14:36,930
but at the end is really an interesting

387
00:14:36,930 --> 00:14:38,670
and interesting approach

388
00:14:38,670 --> 00:14:40,319
that is another another approach for

389
00:14:40,319 --> 00:14:41,970
microphone tans as well obviously for

390
00:14:41,970 --> 00:14:44,279
smooth for making a smoother the

391
00:14:44,279 --> 00:14:45,750
experience for developers they created

392
00:14:45,750 --> 00:14:48,269
also CLI but that means at the same time

393
00:14:48,269 --> 00:14:50,490
that a new joiner in in open table has

394
00:14:50,490 --> 00:14:53,250
to learn all these things and start to

395
00:14:53,250 --> 00:14:54,660
use all the tools that are available

396
00:14:54,660 --> 00:14:57,329
inside the company the first example

397
00:14:57,329 --> 00:14:59,939
that is the one that is closer to my my

398
00:14:59,939 --> 00:15:02,279
ideas is the landed these fashioning

399
00:15:02,279 --> 00:15:08,689
comers and several several years ago I

400
00:15:08,689 --> 00:15:11,429
attempt to talk made by one of their

401
00:15:11,429 --> 00:15:13,529
engineers and the interesting bit there

402
00:15:13,529 --> 00:15:16,920
is that they basically created an

403
00:15:16,920 --> 00:15:19,649
open-source framework or mosaic and

404
00:15:19,649 --> 00:15:21,870
there there is a specific part called

405
00:15:21,870 --> 00:15:25,319
Terry Taylor Jes and what Taylor does is

406
00:15:25,319 --> 00:15:27,480
basically created at runtime that your

407
00:15:27,480 --> 00:15:30,779
pages basically there is a tiny layer

408
00:15:30,779 --> 00:15:32,549
that every time you request a page they

409
00:15:32,549 --> 00:15:33,480
are assembled

410
00:15:33,480 --> 00:15:36,029
HTML fragments on the go obviously they

411
00:15:36,029 --> 00:15:37,379
are highly cacheable because when you

412
00:15:37,379 --> 00:15:40,049
have like I don't know tracksuit from

413
00:15:40,049 --> 00:15:42,179
adidas it would be always that you don't

414
00:15:42,179 --> 00:15:44,339
have to serve something specific but in

415
00:15:44,339 --> 00:15:46,290
that case they can do that they can work

416
00:15:46,290 --> 00:15:49,109
at scale they produce these pages they

417
00:15:49,109 --> 00:15:51,869
cash on and CDN and that that's it the

418
00:15:51,869 --> 00:15:54,329
tailor is written in in go it was one of

419
00:15:54,329 --> 00:15:56,449
the first experiments that they so

420
00:15:56,449 --> 00:15:58,649
pretty brilliant for forefront and

421
00:15:58,649 --> 00:16:01,499
written in gold they were inspired by a

422
00:16:01,499 --> 00:16:03,929
big pie from Facebook so you can see a

423
00:16:03,929 --> 00:16:06,629
big Python on Facebook pages it's more

424
00:16:06,629 --> 00:16:08,160
or less similar but to so in this case

425
00:16:08,160 --> 00:16:10,290
we are talking about components that are

426
00:16:10,290 --> 00:16:13,919
assembled at runtime on the server we

427
00:16:13,919 --> 00:16:16,109
took a different approach in this case

428
00:16:16,109 --> 00:16:18,959
because one thing that I was thinking

429
00:16:18,959 --> 00:16:20,399
when when I was designing this

430
00:16:20,399 --> 00:16:24,029
architecture is okay so now we have like

431
00:16:24,029 --> 00:16:26,009
one or a small team of developers start

432
00:16:26,009 --> 00:16:28,139
working on one platform that is web but

433
00:16:28,139 --> 00:16:30,359
we need to target 30 platforms we need

434
00:16:30,359 --> 00:16:32,489
also to have a distributed distributed

435
00:16:32,489 --> 00:16:34,829
teams that are sharing the same codebase

436
00:16:34,829 --> 00:16:36,449
because they have to work on same

437
00:16:36,449 --> 00:16:39,149
codebase and who else who knows what

438
00:16:39,149 --> 00:16:42,389
could happen next so the first thing

439
00:16:42,389 --> 00:16:44,160
that I did I take our application that

440
00:16:44,160 --> 00:16:46,350
if you think about Netflix is very

441
00:16:46,350 --> 00:16:49,109
similar and I I work with the domains so

442
00:16:49,109 --> 00:16:53,299
I started to slice and dice my my

443
00:16:53,299 --> 00:16:55,410
application in multiple domains

444
00:16:55,410 --> 00:16:57,239
subdomains so we have the landing page

445
00:16:57,239 --> 00:16:59,129
subdomain we have the authentication

446
00:16:59,129 --> 00:17:01,259
that contains sign in/sign up retrieve

447
00:17:01,259 --> 00:17:03,419
email every pass for payment altogether

448
00:17:03,419 --> 00:17:05,789
we have discover in playback where we

449
00:17:05,789 --> 00:17:08,010
have basically the core of the zone

450
00:17:08,010 --> 00:17:09,870
where we have the catalog we have a

451
00:17:09,870 --> 00:17:11,399
search functionality we have a scheduled

452
00:17:11,399 --> 00:17:12,899
functionality and we have the playback

453
00:17:12,899 --> 00:17:15,510
then we have the customer support where

454
00:17:15,510 --> 00:17:17,639
we have the help and the chart the

455
00:17:17,639 --> 00:17:19,110
contact hours and so on and we have my

456
00:17:19,110 --> 00:17:21,029
account where you can basically change a

457
00:17:21,029 --> 00:17:23,579
few of the things so those are the let's

458
00:17:23,579 --> 00:17:26,459
say the key domains that we have

459
00:17:26,459 --> 00:17:28,230
subdomains that we have inside the zone

460
00:17:28,230 --> 00:17:31,529
domain and those are mapped one to one

461
00:17:31,529 --> 00:17:33,029
with our product team so we have a

462
00:17:33,029 --> 00:17:34,889
product team that is managing payment we

463
00:17:34,889 --> 00:17:37,200
have a product is managing I don't know

464
00:17:37,200 --> 00:17:39,929
the acquisition we have a prior protein

465
00:17:39,929 --> 00:17:42,000
for managing the landing page sometimes

466
00:17:42,000 --> 00:17:43,289
the product team is composed by one

467
00:17:43,289 --> 00:17:44,250
person only some

468
00:17:44,250 --> 00:17:46,680
I'm gonna say compost more people

469
00:17:46,680 --> 00:17:48,180
discover in playback is pretty huge for

470
00:17:48,180 --> 00:17:50,730
instance but this is how we restructure

471
00:17:50,730 --> 00:17:55,110
things and each single of these areas

472
00:17:55,110 --> 00:17:57,660
are represented in technically speaking

473
00:17:57,660 --> 00:18:00,000
with a single page application so each

474
00:18:00,000 --> 00:18:01,740
of them is a single single page

475
00:18:01,740 --> 00:18:03,990
application some of them they are not

476
00:18:03,990 --> 00:18:06,810
even sharing the same stuff technology

477
00:18:06,810 --> 00:18:09,330
stuff some of them are based on react

478
00:18:09,330 --> 00:18:11,940
demo backs some other just react we are

479
00:18:11,940 --> 00:18:13,500
doing some tests with other technologies

480
00:18:13,500 --> 00:18:16,170
but all of them are completely different

481
00:18:16,170 --> 00:18:18,090
projects managed by different tips and

482
00:18:18,090 --> 00:18:20,220
they know that work is straightest

483
00:18:20,220 --> 00:18:21,870
because that the complexity of this is

484
00:18:21,870 --> 00:18:23,640
not creating multiple single page

485
00:18:23,640 --> 00:18:25,350
applications is how we deliver to the

486
00:18:25,350 --> 00:18:27,660
client and I spend a lot of time

487
00:18:27,660 --> 00:18:29,190
thinking about that and at the end what

488
00:18:29,190 --> 00:18:30,870
they came up from in order to avoid

489
00:18:30,870 --> 00:18:32,820
scalability issues because the problem

490
00:18:32,820 --> 00:18:35,940
that we have compared to the Rando is we

491
00:18:35,940 --> 00:18:37,620
need to create something that is highly

492
00:18:37,620 --> 00:18:39,870
scalable that is completely customized

493
00:18:39,870 --> 00:18:41,970
for for the user therefore we cannot use

494
00:18:41,970 --> 00:18:44,820
too much the CDN right now for serving

495
00:18:44,820 --> 00:18:46,080
our content because there are too many

496
00:18:46,080 --> 00:18:48,630
permutation so I created this layer this

497
00:18:48,630 --> 00:18:50,850
called the bootstrap and is the first

498
00:18:50,850 --> 00:18:57,850
thing that is downloaded when you type

499
00:18:57,860 --> 00:18:59,360
[Music]

500
00:18:59,360 --> 00:19:08,160
www.hp.com the applique user is watching

501
00:19:08,160 --> 00:19:10,620
the zone and and retrieving the

502
00:19:10,620 --> 00:19:12,020
configuration for that specific country

503
00:19:12,020 --> 00:19:14,880
then is obstructing the input-output

504
00:19:14,880 --> 00:19:17,340
operation for all the other single page

505
00:19:17,340 --> 00:19:19,620
application or microphone tents because

506
00:19:19,620 --> 00:19:21,120
one of the problems you have when you

507
00:19:21,120 --> 00:19:23,490
work on on TVs in particular is that the

508
00:19:23,490 --> 00:19:25,800
API for writing something on on the

509
00:19:25,800 --> 00:19:27,330
Bradys is there completely different

510
00:19:27,330 --> 00:19:29,640
between manufacturer or in the same

511
00:19:29,640 --> 00:19:32,250
manufacturer between different Smart TVs

512
00:19:32,250 --> 00:19:34,770
editions so if you have a Samsung course

513
00:19:34,770 --> 00:19:36,840
I and Samsung Tizen there are completely

514
00:19:36,840 --> 00:19:38,100
different API is to write that so

515
00:19:38,100 --> 00:19:41,820
therefore if if each single microphone

516
00:19:41,820 --> 00:19:43,410
tenders should know this kind of

517
00:19:43,410 --> 00:19:44,760
permutation it means that we need to

518
00:19:44,760 --> 00:19:46,980
create one for each single platform but

519
00:19:46,980 --> 00:19:49,290
honestly we can abstract that and the

520
00:19:49,290 --> 00:19:51,120
bootstrap is doing this the other thing

521
00:19:51,120 --> 00:19:52,290
is the doing the routing between

522
00:19:52,290 --> 00:19:54,150
microphone tans so he understands in

523
00:19:54,150 --> 00:19:57,179
which which state is in which state the

524
00:19:57,179 --> 00:19:57,809
user

525
00:19:57,809 --> 00:20:01,710
and then based on that is retrieving

526
00:20:01,710 --> 00:20:03,960
them the right microphone tense so you

527
00:20:03,960 --> 00:20:06,179
understand if the user is signed in and

528
00:20:06,179 --> 00:20:07,919
if it's signed in it will go straight to

529
00:20:07,919 --> 00:20:09,749
the delivering playback if it's not

530
00:20:09,749 --> 00:20:12,690
signed in it will really start of serve

531
00:20:12,690 --> 00:20:14,580
the landing page unless there is a deep

532
00:20:14,580 --> 00:20:17,450
link and that case is going to the

533
00:20:17,450 --> 00:20:21,210
authentication page for instance the

534
00:20:21,210 --> 00:20:23,729
last thing is it's sharing configuration

535
00:20:23,729 --> 00:20:25,889
across multiple microphone test so in

536
00:20:25,889 --> 00:20:27,929
that case because it's a vanilla just

537
00:20:27,929 --> 00:20:30,450
layer that is just exposing some stuff

538
00:20:30,450 --> 00:20:32,789
we are just exposing things that are

539
00:20:32,789 --> 00:20:34,950
happening in in one area in one

540
00:20:34,950 --> 00:20:36,599
microphone tense and making available

541
00:20:36,599 --> 00:20:38,639
for other microphones and to listen to

542
00:20:38,639 --> 00:20:40,919
that also for instance I don't know

543
00:20:40,919 --> 00:20:44,249
marketing pixel or analytics like Google

544
00:20:44,249 --> 00:20:45,809
tag manager stuff like that are living

545
00:20:45,809 --> 00:20:47,519
inside the bootstrap and the bootstrap

546
00:20:47,519 --> 00:20:50,279
is the key of our of our strategy

547
00:20:50,279 --> 00:20:51,419
because obviously if you think about

548
00:20:51,419 --> 00:20:54,869
that we need to deliver around 20 Smart

549
00:20:54,869 --> 00:20:57,929
TVs application and if I start to have

550
00:20:57,929 --> 00:21:01,799
like the less a specific code the

551
00:21:01,799 --> 00:21:03,960
domain-specific code inside each single

552
00:21:03,960 --> 00:21:06,450
microphone 10 therefore if it's

553
00:21:06,450 --> 00:21:07,710
impossible for us because we need to

554
00:21:07,710 --> 00:21:09,779
have so much effort in order to make it

555
00:21:09,779 --> 00:21:10,259
right

556
00:21:10,259 --> 00:21:11,700
that is very difficult we said if I

557
00:21:11,700 --> 00:21:13,349
obstruct that on the bootstrap is very

558
00:21:13,349 --> 00:21:15,899
interesting because it became very

559
00:21:15,899 --> 00:21:17,729
natural I can reuse authentication

560
00:21:17,729 --> 00:21:20,269
everywhere without changing anything

561
00:21:20,269 --> 00:21:22,739
the other interesting thing of this is

562
00:21:22,739 --> 00:21:27,269
that we can do on the delivery side we

563
00:21:27,269 --> 00:21:28,859
can do something that is unique right

564
00:21:28,859 --> 00:21:31,619
because we can for instance maintain the

565
00:21:31,619 --> 00:21:33,419
current application deliver just a

566
00:21:33,419 --> 00:21:35,339
subset of the functionality of this new

567
00:21:35,339 --> 00:21:37,440
architecture without impacting the user

568
00:21:37,440 --> 00:21:40,080
so potentially we can say 30% of our

569
00:21:40,080 --> 00:21:43,440
users are receiving the discovery in

570
00:21:43,440 --> 00:21:45,899
playback microphone 10 instead of the

571
00:21:45,899 --> 00:21:47,129
previous application that is a single

572
00:21:47,129 --> 00:21:48,929
page application but at the same time I

573
00:21:48,929 --> 00:21:51,749
can reuse all the rest for maintaining

574
00:21:51,749 --> 00:21:53,460
the other note the authentication

575
00:21:53,460 --> 00:21:55,469
landing page stuff like that so it's a

576
00:21:55,469 --> 00:21:58,859
lot this architecture allows us to

577
00:21:58,859 --> 00:22:01,619
deploy wherever we want when we want in

578
00:22:01,619 --> 00:22:04,799
a specific country and is gradually the

579
00:22:04,799 --> 00:22:06,870
the new the new

580
00:22:06,870 --> 00:22:10,269
version of a malcontent like we can do

581
00:22:10,269 --> 00:22:12,850
with microservices if you think about I

582
00:22:12,850 --> 00:22:15,130
don't know Bluegreen deployment or

583
00:22:15,130 --> 00:22:17,230
Canada releases we can do exactly the

584
00:22:17,230 --> 00:22:21,009
same thing with this architecture so if

585
00:22:21,009 --> 00:22:23,139
we think about this what we have we have

586
00:22:23,139 --> 00:22:24,909
gained with with a microphone and so

587
00:22:24,909 --> 00:22:27,159
first of all and foremost microphone 10

588
00:22:27,159 --> 00:22:29,080
is not a component is a representation

589
00:22:29,080 --> 00:22:30,190
of a sub-domain

590
00:22:30,190 --> 00:22:32,440
that is matching exactly the structure

591
00:22:32,440 --> 00:22:35,649
of our organization its technology and

592
00:22:35,649 --> 00:22:37,419
framework agnostic as I said where I can

593
00:22:37,419 --> 00:22:38,980
develop a one microphone tending one

594
00:22:38,980 --> 00:22:40,690
technology and use another one for

595
00:22:40,690 --> 00:22:43,629
another microphone then each microphone

596
00:22:43,629 --> 00:22:45,669
tend expose a lifecycle method that is

597
00:22:45,669 --> 00:22:47,289
used by the bootstrap when we want to

598
00:22:47,289 --> 00:22:49,720
unload the micro front end or mount

599
00:22:49,720 --> 00:22:51,220
amount from tenon doing some things

600
00:22:51,220 --> 00:22:54,759
inside that each team inside the

601
00:22:54,759 --> 00:22:56,649
microphone can can share components code

602
00:22:56,649 --> 00:22:58,809
style any other stuff like that but they

603
00:22:58,809 --> 00:23:01,149
cannot do that outside the microphone

604
00:23:01,149 --> 00:23:02,860
tent because that is going to slow down

605
00:23:02,860 --> 00:23:04,629
everything I work in a lot of large

606
00:23:04,629 --> 00:23:06,850
organization managing hundreds of

607
00:23:06,850 --> 00:23:09,340
developers and when you start to

608
00:23:09,340 --> 00:23:10,960
abstract and have a team that is

609
00:23:10,960 --> 00:23:12,820
centralizing code is where the

610
00:23:12,820 --> 00:23:16,000
throughput is a going nuts because we

611
00:23:16,000 --> 00:23:18,549
you start to have a centralized version

612
00:23:18,549 --> 00:23:20,590
of your code and every time if you need

613
00:23:20,590 --> 00:23:22,120
to change you need to do a number and

614
00:23:22,120 --> 00:23:23,830
additional abstraction the code became

615
00:23:23,830 --> 00:23:25,360
more difficult to maintain and the

616
00:23:25,360 --> 00:23:28,120
six-month time the throughput is gone we

617
00:23:28,120 --> 00:23:30,370
studied this way we can isolate the team

618
00:23:30,370 --> 00:23:31,779
that can pick the data can take their

619
00:23:31,779 --> 00:23:34,330
own decision and they can innovate

620
00:23:34,330 --> 00:23:36,460
inside that the other interesting thing

621
00:23:36,460 --> 00:23:38,470
with this we can test different building

622
00:23:38,470 --> 00:23:40,179
systems one microphone 10 could be brick

623
00:23:40,179 --> 00:23:42,639
there could be let's say build with I

624
00:23:42,639 --> 00:23:44,470
don't know web pack or another one with

625
00:23:44,470 --> 00:23:46,929
parcel and and so on so we can really

626
00:23:46,929 --> 00:23:49,299
have a less a granularity of choice that

627
00:23:49,299 --> 00:23:52,600
we can do with as this is brilliant so

628
00:23:52,600 --> 00:23:54,610
what we achieve so first of all that is

629
00:23:54,610 --> 00:23:56,919
for me pretty interesting we were able

630
00:23:56,919 --> 00:23:58,090
to to onboard

631
00:23:58,090 --> 00:24:00,159
five teams unless in a couple of weeks

632
00:24:00,159 --> 00:24:02,799
time so after the first week they were

633
00:24:02,799 --> 00:24:04,690
able immediately to contribute the

634
00:24:04,690 --> 00:24:06,370
codebase because they are completely

635
00:24:06,370 --> 00:24:08,460
independent they don't have to wait for

636
00:24:08,460 --> 00:24:10,779
understand deeply the architecture they

637
00:24:10,779 --> 00:24:12,039
have like their own single page

638
00:24:12,039 --> 00:24:13,419
application that is really tiny and

639
00:24:13,419 --> 00:24:15,190
small the domain is more they can

640
00:24:15,190 --> 00:24:17,200
understand the domain deeply and then

641
00:24:17,200 --> 00:24:18,820
they can they can go and I start to work

642
00:24:18,820 --> 00:24:19,600
on that

643
00:24:19,600 --> 00:24:21,830
we have currently over a hundred of

644
00:24:21,830 --> 00:24:23,450
developers that are working on the same

645
00:24:23,450 --> 00:24:25,550
code base that is brilliant because I

646
00:24:25,550 --> 00:24:27,110
also in a distributed way because we

647
00:24:27,110 --> 00:24:28,760
have people in in Poland we have people

648
00:24:28,760 --> 00:24:30,650
in London and we are we are opening

649
00:24:30,650 --> 00:24:32,210
right now and you dev Center in after

650
00:24:32,210 --> 00:24:35,030
them and and that is one of the power of

651
00:24:35,030 --> 00:24:38,450
this finally that the developers have

652
00:24:38,450 --> 00:24:40,580
the freedom as possibility to innovate

653
00:24:40,580 --> 00:24:43,370
and owning the code end-to-end and not

654
00:24:43,370 --> 00:24:45,680
just part of that because often too

655
00:24:45,680 --> 00:24:47,960
often architects are thinking just on

656
00:24:47,960 --> 00:24:50,000
the API layer but it's not the API layer

657
00:24:50,000 --> 00:24:52,250
that is that the complex one because

658
00:24:52,250 --> 00:24:55,790
currently we have a lot of let's say way

659
00:24:55,790 --> 00:24:57,950
and and patterns and architecture that

660
00:24:57,950 --> 00:24:59,720
could help us to to scale it up but

661
00:24:59,720 --> 00:25:02,780
forefront and we don't have much so if

662
00:25:02,780 --> 00:25:04,400
you want to start to look deeply on

663
00:25:04,400 --> 00:25:06,110
microphone dance I pick these two

664
00:25:06,110 --> 00:25:07,700
products there aren't many as I've seen

665
00:25:07,700 --> 00:25:10,670
as I've showed before you can have like

666
00:25:10,670 --> 00:25:12,290
an open components there are other ways

667
00:25:12,290 --> 00:25:14,570
to do that like Taylor which is but the

668
00:25:14,570 --> 00:25:16,250
two things that for me are closer to my

669
00:25:16,250 --> 00:25:17,780
mind's that are are these two framework

670
00:25:17,780 --> 00:25:21,440
one is single SBA that is not well known

671
00:25:21,440 --> 00:25:23,180
but is providing a structure that is

672
00:25:23,180 --> 00:25:24,320
very similar to what we are built

673
00:25:24,320 --> 00:25:26,330
unfortunately discover that too late in

674
00:25:26,330 --> 00:25:29,060
the process process like a year or a

675
00:25:29,060 --> 00:25:30,530
year after that we started to work on

676
00:25:30,530 --> 00:25:33,410
this but it is a really interesting one

677
00:25:33,410 --> 00:25:36,080
and then flimsy as fringes provides a

678
00:25:36,080 --> 00:25:38,030
slightly more flexibility and then

679
00:25:38,030 --> 00:25:42,620
freedom we compared to single SBA but is

680
00:25:42,620 --> 00:25:44,210
still another interesting one is

681
00:25:44,210 --> 00:25:46,190
leveraging reactive programming behind

682
00:25:46,190 --> 00:25:48,050
the scene and you can create components

683
00:25:48,050 --> 00:25:51,140
with different with different frameworks

684
00:25:51,140 --> 00:25:54,140
and the fringe is will let's say collect

685
00:25:54,140 --> 00:25:56,330
them and show them inside their ask a

686
00:25:56,330 --> 00:25:58,280
folder so this is an interesting one as

687
00:25:58,280 --> 00:26:02,230
well in order to wrap up I would like to

688
00:26:02,230 --> 00:26:04,490
just summarize what we have seen till

689
00:26:04,490 --> 00:26:07,370
now so when we scale from 10 application

690
00:26:07,370 --> 00:26:09,410
the problem is not scaling

691
00:26:09,410 --> 00:26:11,510
infrastructure is scaling the teams and

692
00:26:11,510 --> 00:26:13,220
we have to take in consideration this

693
00:26:13,220 --> 00:26:15,740
because it's very very important to have

694
00:26:15,740 --> 00:26:17,990
the right fruit put to reduce the

695
00:26:17,990 --> 00:26:20,170
communication of rather between teams

696
00:26:20,170 --> 00:26:23,840
last but not least often developers are

697
00:26:23,840 --> 00:26:25,580
moving from one company to another one

698
00:26:25,580 --> 00:26:27,860
and I don't know how is the the the

699
00:26:27,860 --> 00:26:30,110
industry here but in London they they

700
00:26:30,110 --> 00:26:31,490
are changing more or less every year

701
00:26:31,490 --> 00:26:33,020
year and a half

702
00:26:33,020 --> 00:26:34,070
mainly because they want to try

703
00:26:34,070 --> 00:26:36,200
something new but we microphone talents

704
00:26:36,200 --> 00:26:38,780
you are basically providing them what

705
00:26:38,780 --> 00:26:39,830
they are looking for inside the

706
00:26:39,830 --> 00:26:42,320
organization and also it could be a good

707
00:26:42,320 --> 00:26:45,980
way to retain people last but not least

708
00:26:45,980 --> 00:26:48,050
I'm working right now on if you're

709
00:26:48,050 --> 00:26:49,670
interested to know more about microphone

710
00:26:49,670 --> 00:26:50,990
tents obviously because in 30 minutes

711
00:26:50,990 --> 00:26:51,980
it's very difficult to summarize

712
00:26:51,980 --> 00:26:53,480
everything I'm writing right now a

713
00:26:53,480 --> 00:26:55,670
report for a Riley that would be a free

714
00:26:55,670 --> 00:26:57,440
report probably will be available by the

715
00:26:57,440 --> 00:27:00,050
end of the year I'm doing some a

716
00:27:00,050 --> 00:27:03,250
learning session one will be the 18 of

717
00:27:03,250 --> 00:27:07,640
October online that is fully free you

718
00:27:07,640 --> 00:27:09,530
can check out my social profile and

719
00:27:09,530 --> 00:27:11,660
hopefully from a next year I will be

720
00:27:11,660 --> 00:27:13,670
able to dedicate some of my time on

721
00:27:13,670 --> 00:27:16,100
writing a full book on on microphone

722
00:27:16,100 --> 00:27:19,730
tense that's it for me I know that we

723
00:27:19,730 --> 00:27:21,650
have some time for for questions but if

724
00:27:21,650 --> 00:27:24,050
we are not able to speak right now and

725
00:27:24,050 --> 00:27:25,940
question anything I'm around for their

726
00:27:25,940 --> 00:27:28,820
own two days so please feel free to stop

727
00:27:28,820 --> 00:27:30,770
me and challenge all the ideas that they

728
00:27:30,770 --> 00:27:32,450
share because as I said at the beginning

729
00:27:32,450 --> 00:27:35,059
is two years work and we are we are

730
00:27:35,059 --> 00:27:36,410
going to the past and having a fresh

731
00:27:36,410 --> 00:27:38,540
point of view it could only out thank

732
00:27:38,540 --> 00:27:39,540
you very much

733
00:27:39,540 --> 00:27:43,040
[Applause]

