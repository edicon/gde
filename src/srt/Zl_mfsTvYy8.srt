1
00:00:01,050 --> 00:00:21,170

[Music]

2
00:00:21,170 --> 00:00:23,939
my name is Kayla furnance and I'm

3
00:00:23,939 --> 00:00:27,539
talking about reactive programming I

4
00:00:27,539 --> 00:00:32,099
come from Brazil and it's my first time

5
00:00:32,099 --> 00:00:35,850
in Italy in Europe indeed and I am

6
00:00:35,850 --> 00:00:38,700
software developer consultant at

7
00:00:38,700 --> 00:00:41,730
ThoughtWorks and I'm also Judy like he's

8
00:00:41,730 --> 00:00:46,710
had the angler and web technologies okay

9
00:00:46,710 --> 00:00:51,469
I was born in a small city in Brazil and

10
00:00:51,469 --> 00:00:56,399
Brazil is a huge country so my stage has

11
00:00:56,399 --> 00:01:00,239
the same size of the entire Italy now I

12
00:01:00,239 --> 00:01:03,449
live it in some Paulo is the big biggest

13
00:01:03,449 --> 00:01:07,710
city in my country I have two cats and

14
00:01:07,710 --> 00:01:11,520
two sisters and oh my parents are so

15
00:01:11,520 --> 00:01:13,500
proud I'm here with you today they have

16
00:01:13,500 --> 00:01:19,320
no idea what I do for a living then they

17
00:01:19,320 --> 00:01:22,170
came for Italy once they were in a

18
00:01:22,170 --> 00:01:26,729
Europe tour and that time knowing my mom

19
00:01:26,729 --> 00:01:29,700
would go to France I asked her to bring

20
00:01:29,700 --> 00:01:32,460
me some macaroons but I didn't said to

21
00:01:32,460 --> 00:01:36,540
her what was so in Brazil we speak

22
00:01:36,540 --> 00:01:41,460
Portuguese and the word pasta is maca

23
00:01:41,460 --> 00:01:46,200
home and we share of Brazil she gave me

24
00:01:46,200 --> 00:01:51,329
a pack of pasta and I said it's not maca

25
00:01:51,329 --> 00:01:56,990
homem its macaron and is even taught me

26
00:01:56,990 --> 00:02:00,090
to give some context when try to

27
00:02:00,090 --> 00:02:04,070
communicate with people let's start

28
00:02:04,070 --> 00:02:07,439
software engineer has a science has

29
00:02:07,439 --> 00:02:11,250
about 60 years old is a young search

30
00:02:11,250 --> 00:02:11,910
field

31
00:02:11,910 --> 00:02:13,840
I look at all the much of

32
00:02:13,840 --> 00:02:16,239
knowledge we accumulated involved

33
00:02:16,239 --> 00:02:19,000
through these years and every day you

34
00:02:19,000 --> 00:02:21,970
are creating new things and as a Vella

35
00:02:21,970 --> 00:02:24,819
pers who handle the problems every

36
00:02:24,819 --> 00:02:27,459
single day and I believe that the reason

37
00:02:27,459 --> 00:02:30,400
people pay us to think about problems

38
00:02:30,400 --> 00:02:33,580
they need to find a solution and that's

39
00:02:33,580 --> 00:02:36,010
the strain in a xxx way we like to do

40
00:02:36,010 --> 00:02:36,489
that

41
00:02:36,489 --> 00:02:40,420
and did you remember when you start to

42
00:02:40,420 --> 00:02:44,950
learn to code for me it was about 16

43
00:02:44,950 --> 00:02:47,950
years ago when I entering this wonderful

44
00:02:47,950 --> 00:02:51,579
world of programming and for me and I

45
00:02:51,579 --> 00:02:54,010
think for the major people when start to

46
00:02:54,010 --> 00:02:56,340
learn to code they are taught to think

47
00:02:56,340 --> 00:03:01,500
in imperative way and it makes sense

48
00:03:01,500 --> 00:03:06,180
since E is the way computers thinking

49
00:03:06,180 --> 00:03:10,000
imagine a problem a computer should

50
00:03:10,000 --> 00:03:13,629
solve it has some inputs following

51
00:03:13,629 --> 00:03:16,900
sequential steps of some conditionals

52
00:03:16,900 --> 00:03:23,560
that may razuna expected output and this

53
00:03:23,560 --> 00:03:26,680
way of thinking carry main concerns

54
00:03:26,680 --> 00:03:32,440
about how to solve a problem and many

55
00:03:32,440 --> 00:03:35,139
times worried with implementation

56
00:03:35,139 --> 00:03:41,019
details and may distract us about the

57
00:03:41,019 --> 00:03:44,430
main concern you should put our tension

58
00:03:44,430 --> 00:03:50,500
what is the expected behavior what is

59
00:03:50,500 --> 00:03:56,230
the key and not too much on how I have

60
00:03:56,230 --> 00:03:59,410
here application accorded in JavaScript

61
00:03:59,410 --> 00:04:02,889
it has a propose to draw some geometric

62
00:04:02,889 --> 00:04:06,250
shapes in calculate their areas the

63
00:04:06,250 --> 00:04:09,609
rules are quite simple I have the space

64
00:04:09,609 --> 00:04:12,940
there called as canvas so when I click

65
00:04:12,940 --> 00:04:17,109
on it a point is draw when three points

66
00:04:17,109 --> 00:04:20,620
exist a parallelogram that included

67
00:04:20,620 --> 00:04:23,500
those points is wrong and after that a

68
00:04:23,500 --> 00:04:27,460
circle with the same center an area of

69
00:04:27,460 --> 00:04:32,039
parallelogram is hundred and I have also

70
00:04:32,039 --> 00:04:34,930
coordinates an area valise in G's box

71
00:04:34,930 --> 00:04:38,620
alongside the canvas and when I move

72
00:04:38,620 --> 00:04:43,330
those points of shapes are updated in a

73
00:04:43,330 --> 00:04:47,190
way of imperative program this could be

74
00:04:47,190 --> 00:04:51,280
common solution so in my canvas class I

75
00:04:51,280 --> 00:04:54,759
have one click method that draws a point

76
00:04:54,759 --> 00:04:56,860
draw a parallelogram

77
00:04:56,860 --> 00:04:59,979
there are circle update coordinates and

78
00:04:59,979 --> 00:05:06,250
update area and in my point class I buy

79
00:05:06,250 --> 00:05:09,880
another event or move that draws a

80
00:05:09,880 --> 00:05:10,840
parallelogram

81
00:05:10,840 --> 00:05:13,300
there are circle update coordinates and

82
00:05:13,300 --> 00:05:18,009
update area at first sight you can see

83
00:05:18,009 --> 00:05:21,729
the placated cold and clear imagine how

84
00:05:21,729 --> 00:05:23,620
could be this map messy

85
00:05:23,620 --> 00:05:29,340
I have background in web development

86
00:05:29,340 --> 00:05:34,000
most of time think the way but angler is

87
00:05:34,000 --> 00:05:39,449
a reactive system router HTTP requests

88
00:05:39,449 --> 00:05:42,699
components interactions behind the

89
00:05:42,699 --> 00:05:47,650
scenes we use rxjs javascript library to

90
00:05:47,650 --> 00:05:50,919
deal with reactivity although when I

91
00:05:50,919 --> 00:05:53,400
started to create angular applications

92
00:05:53,400 --> 00:05:57,210
the imperative mindset followed me and

93
00:05:57,210 --> 00:06:00,849
that's how looks like the chorus start

94
00:06:00,849 --> 00:06:06,849
creating the famous spaghetti code and

95
00:06:06,849 --> 00:06:10,750
you remember the old web sites who had

96
00:06:10,750 --> 00:06:15,190
less than 20 years ago for web histories

97
00:06:15,190 --> 00:06:19,780
like Stone Age nowadays you have such

98
00:06:19,780 --> 00:06:23,650
dynamic applications so interactive with

99
00:06:23,650 --> 00:06:26,800
rich animations that refreshes it

100
00:06:26,800 --> 00:06:30,330
smoothly for the user experience is

101
00:06:30,330 --> 00:06:35,110
amazing but for the one who create those

102
00:06:35,110 --> 00:06:39,400
applications is a challenge and can

103
00:06:39,400 --> 00:06:41,460
become a crazy test

104
00:06:41,460 --> 00:06:45,460
not only crazy but also can become a

105
00:06:45,460 --> 00:06:50,530
hell you have functions which car backs

106
00:06:50,530 --> 00:06:54,430
depends on other functions it's not so

107
00:06:54,430 --> 00:06:57,970
hard to get in car back hell and the

108
00:06:57,970 --> 00:07:01,270
rule is for me when things start to get

109
00:07:01,270 --> 00:07:06,300
crazy it's time to think to use rxjs and

110
00:07:06,300 --> 00:07:09,039
with your activity program you have many

111
00:07:09,039 --> 00:07:12,970
elements to that has that nature

112
00:07:12,970 --> 00:07:15,759
asynchronous nature like events

113
00:07:15,759 --> 00:07:19,030
animations HTTP requests its variables

114
00:07:19,030 --> 00:07:22,629
chains all of them carry valise that

115
00:07:22,629 --> 00:07:26,889
change over time imagine an array but

116
00:07:26,889 --> 00:07:29,319
those values are emitted asynchronously

117
00:07:29,319 --> 00:07:33,729
in the presentation layer it's so clear

118
00:07:33,729 --> 00:07:37,060
to see that all this interactivity is

119
00:07:37,060 --> 00:07:41,020
obvious but the reactive which is not

120
00:07:41,020 --> 00:07:44,440
limited to front-end applications or

121
00:07:44,440 --> 00:07:47,830
JavaScript ecosystem almost all

122
00:07:47,830 --> 00:07:52,210
languages have our rx library for

123
00:07:52,210 --> 00:07:56,039
example rx Java is the key for enabling

124
00:07:56,039 --> 00:07:58,509
server-side concurrency in each Flickr's

125
00:07:58,509 --> 00:08:02,319
API and not only you can find reactive

126
00:08:02,319 --> 00:08:05,319
in the code itself but also can see that

127
00:08:05,319 --> 00:08:08,560
in some architectural solutions for

128
00:08:08,560 --> 00:08:13,539
example cloudy functions which are even

129
00:08:13,539 --> 00:08:17,219
driving surveillance applications and

130
00:08:17,219 --> 00:08:21,930
the challenge is how do you change our

131
00:08:21,930 --> 00:08:27,069
mindset there was educated to think in

132
00:08:27,069 --> 00:08:31,599
an imperative way how do you break these

133
00:08:31,599 --> 00:08:34,329
visual circles with the same old

134
00:08:34,329 --> 00:08:39,649
thinking you get the same old results

135
00:08:39,659 --> 00:08:43,779
our brain has a reticular activation

136
00:08:43,779 --> 00:08:48,250
system it is compared to a filter that's

137
00:08:48,250 --> 00:08:52,120
work for our brain it's make sure your

138
00:08:52,120 --> 00:08:54,670
brain does have to do

139
00:08:54,670 --> 00:08:58,090
more information that Ricky handle does

140
00:08:58,090 --> 00:09:00,820
reticular activation system plays a big

141
00:09:00,820 --> 00:09:03,250
role on the society information you

142
00:09:03,250 --> 00:09:08,050
perceive daily did help to you

143
00:09:08,050 --> 00:09:11,440
curious phenomena when you say for

144
00:09:11,440 --> 00:09:14,110
example I never see our videos anymore

145
00:09:14,110 --> 00:09:18,250
and after that this type of car Sunday

146
00:09:18,250 --> 00:09:21,910
appear in front of you it's not

147
00:09:21,910 --> 00:09:24,310
necessarily mean than a number of yellow

148
00:09:24,310 --> 00:09:27,340
beers increase it in your city or in

149
00:09:27,340 --> 00:09:31,230
your neighborhood another situation

150
00:09:31,230 --> 00:09:34,600
imagine you are at an airport and there

151
00:09:34,600 --> 00:09:38,850
are so much noise people talking Airport

152
00:09:38,850 --> 00:09:42,550
announcements and in the middle of

153
00:09:42,550 --> 00:09:46,090
artists noise your name is announced it

154
00:09:46,090 --> 00:09:50,350
and it's important information for your

155
00:09:50,350 --> 00:09:53,710
brain and that's the reason your brain

156
00:09:53,710 --> 00:09:57,190
puts its intention on it it's not a

157
00:09:57,190 --> 00:09:59,950
music phenomenon it's how our brain

158
00:09:59,950 --> 00:10:03,520
works in the same way when I start to

159
00:10:03,520 --> 00:10:07,590
pushing yourselves into reactive mindset

160
00:10:07,590 --> 00:10:10,900
the reactive mantra take over our

161
00:10:10,900 --> 00:10:17,220
thoughts everything can be a stream I

162
00:10:17,220 --> 00:10:22,000
agree waved is a formation but I don't

163
00:10:22,000 --> 00:10:23,920
vacate it at any cost

164
00:10:23,920 --> 00:10:26,740
since I believe software engineering

165
00:10:26,740 --> 00:10:29,860
history has sure that you don't have a

166
00:10:29,860 --> 00:10:33,850
silver bullet for all the problems in

167
00:10:33,850 --> 00:10:37,540
approach even braces have trade-offs

168
00:10:37,540 --> 00:10:41,980
there you you have to consider a basis

169
00:10:41,980 --> 00:10:46,450
in many variables and talking about Rx

170
00:10:46,450 --> 00:10:51,060
is hard since it's a such formal concept

171
00:10:51,060 --> 00:10:55,350
our X is a library for composing

172
00:10:55,350 --> 00:10:58,030
synchronously even basing programs use

173
00:10:58,030 --> 00:11:01,660
observable collections that is our xt of

174
00:11:01,660 --> 00:11:07,810
data over time and rxjs implements the

175
00:11:07,810 --> 00:11:11,430
the observable observer partner and

176
00:11:11,430 --> 00:11:14,890
observable represents the application

177
00:11:14,890 --> 00:11:19,779
data and the observer reacts where it's

178
00:11:19,779 --> 00:11:24,970
change but the observable is not a date

179
00:11:24,970 --> 00:11:25,960
I self

180
00:11:25,960 --> 00:11:29,410
he's like the wrapping and the

181
00:11:29,410 --> 00:11:32,920
flexibility of Jesus implementation is

182
00:11:32,920 --> 00:11:35,860
that it can have different observers

183
00:11:35,860 --> 00:11:40,330
that listen to anike observable but

184
00:11:40,330 --> 00:11:44,980
react in many ways and talking about

185
00:11:44,980 --> 00:11:50,170
code what is an observable in rxjs it's

186
00:11:50,170 --> 00:11:53,320
just a function and can you want to tell

187
00:11:53,320 --> 00:11:57,190
me what does this code do there's

188
00:11:57,190 --> 00:12:05,230
something there's nothing okay there's

189
00:12:05,230 --> 00:12:08,230
nothing they say you have to connect the

190
00:12:08,230 --> 00:12:11,410
observable end observer you do that

191
00:12:11,410 --> 00:12:14,980
using subscribe metal so to start

192
00:12:14,980 --> 00:12:18,610
execution an observer is just an object

193
00:12:18,610 --> 00:12:22,180
with three callbacks next arrow and

194
00:12:22,180 --> 00:12:25,360
complete the first go back next pass

195
00:12:25,360 --> 00:12:28,600
value to the observe observer sorry and

196
00:12:28,600 --> 00:12:31,450
in this case you have the subscribe

197
00:12:31,450 --> 00:12:34,900
matter we're passing the message hello

198
00:12:34,900 --> 00:12:37,510
Varun you should see finally in console

199
00:12:37,510 --> 00:12:40,930
hello Verona the second callback is a

200
00:12:40,930 --> 00:12:43,810
error there not price arrow to the

201
00:12:43,810 --> 00:12:47,380
observer and different for the next you

202
00:12:47,380 --> 00:12:49,450
can call any time the next method the

203
00:12:49,450 --> 00:12:53,320
pass any time of object the arrow just

204
00:12:53,320 --> 00:12:56,260
finish in my observable so in this case

205
00:12:56,260 --> 00:12:59,320
you should see in the console hello and

206
00:12:59,320 --> 00:13:03,850
never happen and the third alas Quebec

207
00:13:03,850 --> 00:13:08,290
is complete method so I just finish our

208
00:13:08,290 --> 00:13:11,770
observable in this case you should see

209
00:13:11,770 --> 00:13:13,390
in the console hello

210
00:13:13,390 --> 00:13:17,020
don't it's very important to defer two

211
00:13:17,020 --> 00:13:20,170
types of observables hard and code

212
00:13:20,170 --> 00:13:21,580
observables

213
00:13:21,580 --> 00:13:23,950
the code of service which valise I

214
00:13:23,950 --> 00:13:28,000
created inside the observable in this

215
00:13:28,000 --> 00:13:31,060
case in no matter the moment I subscribe

216
00:13:31,060 --> 00:13:33,399
for example the front Manta

217
00:13:33,399 --> 00:13:36,430
I get all the vowels in the case all the

218
00:13:36,430 --> 00:13:39,750
vowels from this array in the other hand

219
00:13:39,750 --> 00:13:43,690
the heart observables there well I

220
00:13:43,690 --> 00:13:47,800
create outside observable so a classical

221
00:13:47,800 --> 00:13:52,120
example our mouth clicks so you just get

222
00:13:52,120 --> 00:13:56,769
those values that happens after you do

223
00:13:56,769 --> 00:14:00,790
the subscription and the power of rxjs

224
00:14:00,790 --> 00:14:03,910
relates on his operators and we've

225
00:14:03,910 --> 00:14:06,730
Daniel can filter transform you can

226
00:14:06,730 --> 00:14:10,050
change those operators and the rule is

227
00:14:10,050 --> 00:14:15,180
observable always return observable I

228
00:14:15,180 --> 00:14:18,279
don't wanna we're about curious

229
00:14:18,279 --> 00:14:22,209
phenomenon about cats no matter its

230
00:14:22,209 --> 00:14:24,100
scientific also no matter how to get

231
00:14:24,100 --> 00:14:24,610
false

232
00:14:24,610 --> 00:14:28,660
they always falls on their feet for me

233
00:14:28,660 --> 00:14:32,070
it's like a tautology to be or not to be

234
00:14:32,070 --> 00:14:33,970
that's the question

235
00:14:33,970 --> 00:14:36,339
oh there's nothing you can do they can

236
00:14:36,339 --> 00:14:38,470
be done nothing you can sing that can't

237
00:14:38,470 --> 00:14:39,100
be sung

238
00:14:39,100 --> 00:14:41,640
don't forget observables always return

239
00:14:41,640 --> 00:14:47,440
observable I brought some operators the

240
00:14:47,440 --> 00:14:49,959
first one is future it's very similar to

241
00:14:49,959 --> 00:14:52,839
the array method remember observable as

242
00:14:52,839 --> 00:14:56,339
array but those values are emitted

243
00:14:56,339 --> 00:15:01,420
synchronously and in this case just B is

244
00:15:01,420 --> 00:15:04,440
emitted the second one is keep a while

245
00:15:04,440 --> 00:15:09,010
nothing happens until some conditional

246
00:15:09,010 --> 00:15:11,680
is expired so in this case unless

247
00:15:11,680 --> 00:15:14,949
validly the entry no valleys in the

248
00:15:14,949 --> 00:15:19,110
mission didn't start so when valleys 3 I

249
00:15:19,110 --> 00:15:22,680
omit the tree and the next sheet 2 and

250
00:15:22,680 --> 00:15:28,000
about the time you have to wait amount

251
00:15:28,000 --> 00:15:31,690
of time to start a mission so it's very

252
00:15:31,690 --> 00:15:35,320
useful in scenarios such as type

253
00:15:35,320 --> 00:15:38,260
had one day user input must be under

254
00:15:38,260 --> 00:15:42,400
control and in this case I'm using the

255
00:15:42,400 --> 00:15:46,360
interval method that emits an itch at

256
00:15:46,360 --> 00:15:48,760
every second and let me use the boss

257
00:15:48,760 --> 00:15:51,970
time just change that the time I have to

258
00:15:51,970 --> 00:15:55,660
wait and with the take operator they get

259
00:15:55,660 --> 00:15:58,320
the two first emission and completing my

260
00:15:58,320 --> 00:16:03,910
observable and next two are do

261
00:16:03,910 --> 00:16:04,960
transformations

262
00:16:04,960 --> 00:16:09,010
the first one is map it just returns to

263
00:16:09,010 --> 00:16:12,820
two times the valley and the last one is

264
00:16:12,820 --> 00:16:15,780
plug is beautiful why you're not

265
00:16:15,780 --> 00:16:18,910
interesting in the whole object in this

266
00:16:18,910 --> 00:16:21,610
case I just wanna then they just want

267
00:16:21,610 --> 00:16:26,480
the name of the person and

268
00:16:26,490 --> 00:16:28,750
observables require memory subscription

269
00:16:28,750 --> 00:16:31,240
check my memory so it's strongly

270
00:16:31,240 --> 00:16:33,430
recommend and when you it's not

271
00:16:33,430 --> 00:16:35,680
necessary to listen the observable

272
00:16:35,680 --> 00:16:38,350
anymore you should also subscribe you

273
00:16:38,350 --> 00:16:41,440
can do that using explicit calling on

274
00:16:41,440 --> 00:16:44,290
subscribe method or use your P return

275
00:16:44,290 --> 00:16:47,740
like taking or taking - dad - dad under

276
00:16:47,740 --> 00:16:57,720
the hood so it's time to writing code so

277
00:16:57,720 --> 00:17:12,339
let me see if you can okay but I can see

278
00:17:12,339 --> 00:17:33,800
there it's not good

279
00:17:33,810 --> 00:17:37,330
sorry I'm just trying to find out how to

280
00:17:37,330 --> 00:17:46,980
do that anyone can help me please I

281
00:17:46,980 --> 00:17:56,590
sorry I just move to them I want to see

282
00:17:56,590 --> 00:17:59,880
there the best cold

283
00:17:59,880 --> 00:18:16,200
yeah yeah - copy

284
00:18:16,210 --> 00:18:21,560
screen lock I believe is a scream

285
00:18:21,560 --> 00:18:45,310
alright yeah here okay okay oh yeah

286
00:18:45,310 --> 00:18:49,390
sorry about that okay

287
00:18:49,390 --> 00:18:52,420
it's good for you too for everybody see

288
00:18:52,420 --> 00:18:56,180
okay for example I have this application

289
00:18:56,180 --> 00:19:00,830
here so I can transform promises into

290
00:19:00,830 --> 00:19:03,890
observables so I create a new problems

291
00:19:03,890 --> 00:19:13,880
here resolve and reject okay I'll call

292
00:19:13,880 --> 00:19:19,240
resolve method I'll put some time here

293
00:19:19,240 --> 00:19:37,730
just wait a little bit and okay okay and

294
00:19:37,730 --> 00:19:44,090
I can't get these problems here and use

295
00:19:44,090 --> 00:19:47,450
them from method I can transform into an

296
00:19:47,450 --> 00:19:52,830
observable so I can subscribe to it and

297
00:19:52,840 --> 00:20:00,920
just show what's coming and console so

298
00:20:00,920 --> 00:20:04,940
let's see okay

299
00:20:04,940 --> 00:20:10,640
resolve it let's see the difference

300
00:20:10,640 --> 00:20:14,540
about hot and cold observables in scales

301
00:20:14,540 --> 00:20:16,880
I will create an observable here observe

302
00:20:16,880 --> 00:20:21,200
oh sorry observable and we using Create

303
00:20:21,200 --> 00:20:29,360
method and I will create like a vowel

304
00:20:29,360 --> 00:20:29,940
inside

305
00:20:29,940 --> 00:20:36,350
here just a random number rendering and

306
00:20:36,350 --> 00:20:41,450
just call next method passing this value

307
00:20:41,450 --> 00:20:43,909
okay

308
00:20:43,909 --> 00:20:49,220
and I would subscribe to this two times

309
00:20:49,220 --> 00:21:05,409
so subscribe okay I'll do that two times

310
00:21:05,419 --> 00:21:10,620
saving okay is that the value is created

311
00:21:10,620 --> 00:21:13,139
inside observable so they are

312
00:21:13,139 --> 00:21:15,539
independent string there are different

313
00:21:15,539 --> 00:21:20,970
values but for example if I move X

314
00:21:20,970 --> 00:21:23,370
outside mob servable so the value it

315
00:21:23,370 --> 00:21:25,200
create outside is a hot observable in

316
00:21:25,200 --> 00:21:28,200
this case what should happen the same

317
00:21:28,200 --> 00:21:35,990
value okay and we've taken two operator

318
00:21:35,990 --> 00:21:39,090
demonstrate some example and I will

319
00:21:39,090 --> 00:21:45,679
declare an interval here using travaux

320
00:21:45,679 --> 00:21:49,440
method passing for example 500

321
00:21:49,440 --> 00:21:52,820
milliseconds and I declare another one

322
00:21:52,820 --> 00:21:58,970
that is my Max and I can use inter and

323
00:21:58,970 --> 00:22:01,470
to use operators I have to use pipe

324
00:22:01,470 --> 00:22:05,990
method inside I put taken to you and

325
00:22:05,990 --> 00:22:10,289
pass these observable max so I will

326
00:22:10,289 --> 00:22:16,799
subscribe to it and just bring it in in

327
00:22:16,799 --> 00:22:23,150
console

328
00:22:23,160 --> 00:22:28,530
zero one and two and taking a 2 also

329
00:22:28,530 --> 00:22:31,950
completes my observable I can check this

330
00:22:31,950 --> 00:22:37,170
in my third callback second I put just

331
00:22:37,170 --> 00:22:44,430
no and the third one I don't have to put

332
00:22:44,430 --> 00:22:54,000
anything here done saving you don't want

333
00:22:54,000 --> 00:22:58,200
you done okay and I have an operator

334
00:22:58,200 --> 00:22:59,610
that is called

335
00:22:59,610 --> 00:23:03,030
even my observable gets an arrow or is

336
00:23:03,030 --> 00:23:05,670
just completed there is finalized in

337
00:23:05,670 --> 00:23:07,800
this case is I'm completing my

338
00:23:07,800 --> 00:23:11,480
observable so just to see how it works I

339
00:23:11,480 --> 00:23:19,670
can put here oops

340
00:23:19,670 --> 00:23:29,100
yeah okay and when you gather here every

341
00:23:29,100 --> 00:23:32,340
you know observable it's done it's

342
00:23:32,340 --> 00:23:35,700
complete it cannot pass novellas using

343
00:23:35,700 --> 00:23:38,910
act method but it can do something for

344
00:23:38,910 --> 00:23:41,520
example I got the car and other

345
00:23:41,520 --> 00:23:47,660
observable here create using grid method

346
00:23:47,660 --> 00:24:01,740
so I'll call next here okay one ok chew

347
00:24:01,740 --> 00:24:06,960
and equate three oh I forgot to

348
00:24:06,960 --> 00:24:15,140
subscribe subscribing

349
00:24:15,140 --> 00:24:22,830
so you just print those valleys okay

350
00:24:22,830 --> 00:24:25,440
okay one can took a tree but if an arrow

351
00:24:25,440 --> 00:24:29,240
happens here what what should you see

352
00:24:29,240 --> 00:24:33,150
just okay one but you can you cannot

353
00:24:33,150 --> 00:24:35,580
continuum it we if it is observable but

354
00:24:35,580 --> 00:24:36,690
you can create and

355
00:24:36,690 --> 00:24:38,760
you observable sometimes it's user for

356
00:24:38,760 --> 00:24:41,010
your application so in this case we use

357
00:24:41,010 --> 00:24:46,380
pipe here and I you use an operator

358
00:24:46,380 --> 00:24:50,850
called catch error so if it's operator

359
00:24:50,850 --> 00:24:53,370
I'm we return and you observe a book

360
00:24:53,370 --> 00:24:56,430
just we're using off method just for

361
00:24:56,430 --> 00:25:06,060
example okay for oh yeah thank you

362
00:25:06,060 --> 00:25:09,540
and now what should happen I turn you

363
00:25:09,540 --> 00:25:11,990
okay well and you observable with valor

364
00:25:11,990 --> 00:25:15,150
204 Anna let's come back for the

365
00:25:15,150 --> 00:25:22,140
presentation now so after all geez

366
00:25:22,140 --> 00:25:24,450
reactive how could you propose a new

367
00:25:24,450 --> 00:25:26,190
solution for the draw shapes problem

368
00:25:26,190 --> 00:25:29,190
remember three points a parallelogram in

369
00:25:29,190 --> 00:25:31,470
a circle and I have chopped eight your

370
00:25:31,470 --> 00:25:34,230
coordinates and area valleys in my

371
00:25:34,230 --> 00:25:36,750
canvas skies in my own click method I

372
00:25:36,750 --> 00:25:40,080
just draw a point so in my point class I

373
00:25:40,080 --> 00:25:43,620
created a new subject that passed the

374
00:25:43,620 --> 00:25:46,830
coordinate ballast to wherever wants to

375
00:25:46,830 --> 00:25:49,980
listen to it and when I move I also do

376
00:25:49,980 --> 00:25:53,910
that so in my parallelogram I listen to

377
00:25:53,910 --> 00:25:56,820
this new observable subject sorry and

378
00:25:56,820 --> 00:26:02,460
I'm just interesting when I have three

379
00:26:02,460 --> 00:26:04,200
coordinates so there's a reason use a

380
00:26:04,200 --> 00:26:08,300
future operator that draws a point so I

381
00:26:08,300 --> 00:26:11,460
created a new subject that pads the area

382
00:26:11,460 --> 00:26:14,400
in the center to the circle there at

383
00:26:14,400 --> 00:26:17,190
least is listen to that subject and draw

384
00:26:17,190 --> 00:26:20,100
the circles and after that emit an extra

385
00:26:20,100 --> 00:26:25,920
event and let's get into some angular

386
00:26:25,920 --> 00:26:29,070
reactivity so imagine you have to

387
00:26:29,070 --> 00:26:32,430
implement a loading component you can

388
00:26:32,430 --> 00:26:36,350
create a loading service that listen to

389
00:26:36,350 --> 00:26:42,300
router events which are observables so I

390
00:26:42,300 --> 00:26:45,120
have the subject to show loading that

391
00:26:45,120 --> 00:26:48,500
pass the valid - when navigation starch

392
00:26:48,500 --> 00:26:50,429
otherwise on navigation

393
00:26:50,429 --> 00:26:53,159
and Pez Valley false so I have a

394
00:26:53,159 --> 00:26:56,009
specific time of subject let's call it

395
00:26:56,009 --> 00:26:59,879
behavior subject in this case this

396
00:26:59,879 --> 00:27:02,730
subject requires initialization because

397
00:27:02,730 --> 00:27:04,409
I want to make sure that the full value

398
00:27:04,409 --> 00:27:06,210
for loading is false

399
00:27:06,210 --> 00:27:09,480
I haven't used the application i

400
00:27:09,480 --> 00:27:13,769
implemented months ago in angular the

401
00:27:13,769 --> 00:27:18,360
page had three sections and each of both

402
00:27:18,360 --> 00:27:21,779
sections consumes different services and

403
00:27:21,779 --> 00:27:25,740
different data bases so I had a layer a

404
00:27:25,740 --> 00:27:29,909
BFF layer the sense to me they unique JS

405
00:27:29,909 --> 00:27:34,230
object the problem we had if some

406
00:27:34,230 --> 00:27:37,409
service were dead I couldn't load my

407
00:27:37,409 --> 00:27:40,850
entire page so to turn the table i

408
00:27:40,850 --> 00:27:43,889
implemented parallel requests using for

409
00:27:43,889 --> 00:27:47,490
Kajin operator and not only i achieve a

410
00:27:47,490 --> 00:27:50,249
more error easily ending system but also

411
00:27:50,249 --> 00:27:54,509
i could get data faster and I

412
00:27:54,509 --> 00:27:57,389
implemented retry feature just allow the

413
00:27:57,389 --> 00:28:00,960
section that failed those example were

414
00:28:00,960 --> 00:28:04,350
about services and how about components

415
00:28:04,350 --> 00:28:07,710
I had to implement a core component and

416
00:28:07,710 --> 00:28:11,610
you know the expected behavior is open

417
00:28:11,610 --> 00:28:16,649
it on click on its header if there is

418
00:28:16,649 --> 00:28:20,730
some another element the item that is

419
00:28:20,730 --> 00:28:26,549
active you have to close it so in my

420
00:28:26,549 --> 00:28:29,909
accordion template I just put in gherkin

421
00:28:29,909 --> 00:28:32,789
directive and the meat and potatoes are

422
00:28:32,789 --> 00:28:37,529
in my Accord item template so I had a

423
00:28:37,529 --> 00:28:41,539
header and a content section and I use

424
00:28:41,539 --> 00:28:45,960
CSS class to bind properties and the

425
00:28:45,960 --> 00:28:47,759
usage is nesting

426
00:28:47,759 --> 00:28:52,409
I called item each mark origin so my

427
00:28:52,409 --> 00:28:53,129
class

428
00:28:53,129 --> 00:28:56,549
McChord ID component class I create I

429
00:28:56,549 --> 00:28:59,340
even Demeter what is unobservable

430
00:28:59,340 --> 00:29:02,809
and when I open my record I think I just

431
00:29:02,809 --> 00:29:04,200
use

432
00:29:04,200 --> 00:29:06,239
a media notification used a meat method

433
00:29:06,239 --> 00:29:09,470
and in my heart and component I

434
00:29:09,470 --> 00:29:14,009
subscribe for those observables to make

435
00:29:14,009 --> 00:29:19,100
sure I close act are active I think and

436
00:29:19,100 --> 00:29:23,100
I especially like this way to do and

437
00:29:23,100 --> 00:29:23,999
subscribe

438
00:29:23,999 --> 00:29:30,200
so I declare a subject and pass into

439
00:29:30,200 --> 00:29:34,679
taking a chill operator and when I

440
00:29:34,679 --> 00:29:37,019
destroy my component I just completely

441
00:29:37,019 --> 00:29:39,989
subject so I don't need to call a

442
00:29:39,989 --> 00:29:46,559
subscriber explicitly and the cherry on

443
00:29:46,559 --> 00:29:49,830
the top is that component I had to

444
00:29:49,830 --> 00:29:55,109
implement is model component that made

445
00:29:55,109 --> 00:29:58,470
like making HTTP requests and load some

446
00:29:58,470 --> 00:30:02,249
context and did you notice I use a lot

447
00:30:02,249 --> 00:30:07,789
of subject in all my implementations but

448
00:30:07,789 --> 00:30:11,820
those example they don't doesn't have

449
00:30:11,820 --> 00:30:14,999
had the possibility to fail is different

450
00:30:14,999 --> 00:30:17,730
for this one it came failure since is a

451
00:30:17,730 --> 00:30:23,460
HTTP request yeah I couldn't do that so

452
00:30:23,460 --> 00:30:26,820
I will show to you what happens I made

453
00:30:26,820 --> 00:30:34,049
an example here without subject yeah so

454
00:30:34,049 --> 00:30:38,759
I heard I just make you an example for

455
00:30:38,759 --> 00:30:40,859
you to know but it was very similar what

456
00:30:40,859 --> 00:30:43,830
I did I have a dangerous service here

457
00:30:43,830 --> 00:30:47,039
I'm just returning observable of string

458
00:30:47,039 --> 00:30:51,149
I did that put in a valor here and I

459
00:30:51,149 --> 00:30:53,789
will increase it this valley for the

460
00:30:53,789 --> 00:30:56,039
second time I'm simulating error

461
00:30:56,039 --> 00:30:58,799
otherwise it's gonna be success so I'm

462
00:30:58,799 --> 00:31:01,440
gonna turn observable pasinetta returnin

463
00:31:01,440 --> 00:31:08,309
a my model component I have like loading

464
00:31:08,309 --> 00:31:10,919
message when them is loading is getting

465
00:31:10,919 --> 00:31:14,609
the data otherwise it show a message the

466
00:31:14,609 --> 00:31:17,220
message is like you coating Lola or

467
00:31:17,220 --> 00:31:18,090
content

468
00:31:18,090 --> 00:31:22,320
era so I had I put property here there

469
00:31:22,320 --> 00:31:25,290
is a subject the way I try to do the

470
00:31:25,290 --> 00:31:29,550
first time and I just subscribe to this

471
00:31:29,550 --> 00:31:32,010
and I'm using finalized you remember

472
00:31:32,010 --> 00:31:36,240
that otherwise no matter if it gets an

473
00:31:36,240 --> 00:31:39,240
arrow or success I want to remove the

474
00:31:39,240 --> 00:31:43,830
loading so in my app component I'm just

475
00:31:43,830 --> 00:31:46,740
using the load in passing the subject as

476
00:31:46,740 --> 00:31:50,700
input property and I'm usages click to

477
00:31:50,700 --> 00:31:54,470
open a modal so in my app component I

478
00:31:54,470 --> 00:31:58,860
have I create the subject here and when

479
00:31:58,860 --> 00:32:02,160
I click to open model I call open from

480
00:32:02,160 --> 00:32:06,060
the model component and get data so I

481
00:32:06,060 --> 00:32:09,090
just put delay to simulate a real it's

482
00:32:09,090 --> 00:32:10,380
trip request that takes a little bit

483
00:32:10,380 --> 00:32:14,040
longer and using tap just to say I

484
00:32:14,040 --> 00:32:19,020
finish you the the request and I'm you

485
00:32:19,020 --> 00:32:21,960
sketch error to call error if something

486
00:32:21,960 --> 00:32:25,310
that wrongs so let's see what happened

487
00:32:25,310 --> 00:32:30,750
first time should load my compton second

488
00:32:30,750 --> 00:32:33,600
time should get an error and the other

489
00:32:33,600 --> 00:32:45,900
time yeah didn't work so so I have to

490
00:32:45,900 --> 00:32:50,400
back to Terry and in this incredible

491
00:32:50,400 --> 00:32:51,960
article for embellish for me to the

492
00:32:51,960 --> 00:32:56,660
master of XJS on the subject of subjects

493
00:32:56,660 --> 00:33:00,450
what he said about people like me there

494
00:33:00,450 --> 00:33:04,560
are always those subjects while this is

495
00:33:04,560 --> 00:33:07,800
helpful for people neutral XJS and in

496
00:33:07,800 --> 00:33:10,470
that capacity totally fine it's not

497
00:33:10,470 --> 00:33:13,860
really the RX way to handle things like

498
00:33:13,860 --> 00:33:17,760
this so I was not being so reactive here

499
00:33:17,760 --> 00:33:22,530
was a fault and do remember the subject

500
00:33:22,530 --> 00:33:25,880
a partner we were having a gang of four

501
00:33:25,880 --> 00:33:27,960
is very similar they therefore

502
00:33:27,960 --> 00:33:32,210
subjecting rxjs and you have

503
00:33:32,210 --> 00:33:36,090
registered observable so a subject has a

504
00:33:36,090 --> 00:33:40,019
stage if something fail getting an arrow

505
00:33:40,019 --> 00:33:42,330
it's closed I can do nothing anymore

506
00:33:42,330 --> 00:33:45,570
that's the reason I get an arrow in my

507
00:33:45,570 --> 00:33:48,840
model first implementation so and

508
00:33:48,840 --> 00:33:52,879
remember what is observable in rxjs

509
00:33:52,879 --> 00:34:01,239
it's just a function and I try again

510
00:34:01,249 --> 00:34:06,029
okay so you might get a serve see I have

511
00:34:06,029 --> 00:34:08,520
the same implementation so the second

512
00:34:08,520 --> 00:34:10,859
times get an error the other time is

513
00:34:10,859 --> 00:34:13,319
going to be success if I motor component

514
00:34:13,319 --> 00:34:17,490
templates is the same thing in my model

515
00:34:17,490 --> 00:34:19,819
component class is almost the same thing

516
00:34:19,819 --> 00:34:24,659
instead now I have an observable and the

517
00:34:24,659 --> 00:34:26,339
method is the same thing that was done

518
00:34:26,339 --> 00:34:29,579
before and my epic component

519
00:34:29,579 --> 00:34:35,579
I have MEP model but now instead of

520
00:34:35,579 --> 00:34:39,690
passing the subject here am i ng on each

521
00:34:39,690 --> 00:34:43,049
method I'm just using per function here

522
00:34:43,049 --> 00:34:47,309
so I I create a new observable and when

523
00:34:47,309 --> 00:34:50,309
get success I just call next and then I

524
00:34:50,309 --> 00:34:53,309
get error I just call error method so

525
00:34:53,309 --> 00:34:56,220
let's see how what's happened first time

526
00:34:56,220 --> 00:35:02,490
 loaded content error and content

527
00:35:02,490 --> 00:35:09,870
loaded content error and content
loaded

528
00:35:09,880 --> 00:35:13,580
so that's it guys thank you so much

529
00:35:13,580 --> 00:35:21,310
[Applause]

530
00:35:21,320 --> 00:35:23,740


531
00:35:23,740 --> 00:35:23,750
[Applause]

532
00:35:23,750 --> 00:35:27,260
you

